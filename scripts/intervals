#!/bin/zsh

# If not running on Mac, show error and exit.
if [ "$(uname)" != "Darwin" ]; then
    echo "This script only works on Mac."
    exit 1
fi

# Expect exactly three arguments
if [ $# -ne 3 ]; then
  echo "Usage: meditate <on-seconds> <off-seconds> <num-intervals>"
  exit 1
fi

# Function to validate that a value is an integer.
function validate_integer {
  if ! [[ $1 =~ ^[0-9]+$ ]]; then
    echo "Usage: meditate <on-seconds> <off-seconds> <num-intervals>"
    exit 1
  fi
}

# Parse arguments and validate as integers.
on_seconds=$1
off_seconds=$2
num_intervals=$3
validate_integer $on_seconds
validate_integer $off_seconds
validate_integer $num_intervals

# Sound to play each second.
sec_sound=/System/Library/Sounds/Tink.aiff
if [ ! -f ${sec_sound} ]; then
  echo "${sec_sound} not found."
  exit 1
fi

# For `num_intervals` intervals, play a sound every second for `on_seconds`
# seconds while printing a countdown timer, then sleep for `off_seconds`
# seconds, only showing the countdown timer.
for ((i=0; i<$num_intervals; i++)); do
  for ((j=$on_seconds; j>0; j--)); do
    printf "\r%02d:%02d" $(($j / 60)) $(($j % 60))
    afplay ${sec_sound} &
    sleep 1
  done
  printf "\r%02d:%02d" 0 0
  afplay ${sec_sound} &
  sleep $off_seconds
done
