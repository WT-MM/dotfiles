#!/usr/bin/env python

import argparse
import ast
import json
from pathlib import Path
import sys


def get_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser(description="Pretty printer")
    parser.add_argument("-f", "--file", help="Path to file")
    return parser.parse_args()


def print_json(text: str) -> bool:
    try:
        json_obj = json.loads(text)
        print(json.dumps(json_obj, indent=2), file=sys.stdout)
        return True
    except json.JSONDecodeError:
        return False


def print_pyobj(text: str) -> bool:
    try:
        obj = ast.literal_eval(text)
        print(json.dumps(obj, indent=2), file=sys.stdout)
        return True
    except SyntaxError:
        return False


def main() -> None:
    args = get_args()

    # Gets text content.
    if args.file is None:
        text = sys.stdin.read()
    else:
        with open(args.file, "r") as f:
            text = f.read()

    # Methods to try pretty-printing text.
    if print_json(text):
        return
    if print_pyobj(text):
        return
    
    raise NotImplementedError(f"Can't pretty print '{text}'")


if __name__ == "__main__":
    main()

